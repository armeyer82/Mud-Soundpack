#CLASS {Worlds} OPEN

#ALIAS {add-ssl}
{
     #local Mudname;
     #format {Mudname} {%n}{%1};
     #if {@WorldExists{$Mudname}}
     {
          #variable World[$Mudname][SSLport] %2;
          #variable World[$Mudname][UseSSL] 1;
          #showme Added %2 as the SSL port for $Mudname and enabled SSL;
          .save-class Worlds
     };
     #else
     {
          #showme No information on this world. Please add it first before trying to add SSL connection information.
     }
}

#ALIAS {add-world}
{
     #local Mudname;
     #format {Mudname} {%n}{%1};
     #if {@WorldExists{$Mudname}}
     {
          #showme A world with that name already exists.
     };
     #else
     {
          #showme Adding $Mudname;
          #variable World[$Mudname][Host] %2;
          #variable World[$Mudname][Port] %3;
          .save-class Worlds
     }
}

#ALIAS {auto-connect}
{
     #if {${auto-connect}==1 && "$LastConnectMud"!="none"}
     {
          #showme Attempting to reconnect to $LastConnectedMud;
          @ConnectMud{$LastConnectedMud}
     }
}

#ALIAS {connect}
{
     #local Mudname @Uppercase{%1};
     #if {"$Mudname"!=""}
     {
          #if {@WorldExists{$Mudname}}
          {
               @ConnectMud{$Mudname};
               #class Settings open;
               #variable LastConnectedMud $Mudname;
               #class Settings close;
               #class Settings write $SettingsPath/Settings.tin
          };
          #else
          {
               #showme Sorry I don't have connection information for that MUD.
          }
     };
     #else
     {
          #showme Please specify the name of a mud.
     }
}

#ALIAS {delete-world}
{
     #local Mudname;
     #format {Mudname} {%n}{%1};
     #if {@WorldExists[$Mudname]}
     {
          #unvariable World[$Mudname];
          #showme Deleted $Mudname
     };
     #else
     {
          #showme $Mudname does not exists.
     }
}

#ALIAS {ssl}
{
     #switch {"%1"}
     {
          #case {"on"}
          {
               #class Settings open;
               #variable SSL 1;
               #class Settings close;
               #class Settings write $SettingsPath/Settings.tin;
               #showme SSL enabled
          };
          #case {"off"}
          {
               #class Settings open;
               #variable SSL 0;
               #class Settings close;
               #class Settings write $SettingsPath/Settings.tin;
               #showme SSL has been disabled.
          };
          #default
          {
               #showme Syntax is ssl on/off
          }
     }
}

#FUNCTION {ConnectMud}
{
     #if {$SSL==1&&$World[%1][SSLport]}
     {
          #return #ssl %1 $World[%1][Host] $World[%1][SSLport]
     };
     #else
     {
          #return #session %1 $World[%1][Host] $World[%1][Port]
     }
}

#FUNCTION {WorldExists}
{
     #format {result} {%n}{%1};
     #return &World[$result]
}

#GAG              {#SYSTEM ERROR (Miriani) connect_mud: connect (61: Connection refused)}
#GAG              {Connection refused}
#GAG              {connection refused}
#VARIABLE         {Logdir}  {/Users/ameyer/Mud-Files/Miriani/Logs/}
#VARIABLE         {Userdir}  {/Users/ameyer/Mud-Files/Miriani/User-Scripts/}
#VARIABLE         {World}  {{CR}{{Host}{cosmicrage.nathantech.net}{Port}{7777}}{Everdark}{{Host}{everdark.org}{Port}{3000}}{Miriani}{{Host}{moo.toastsoft.net}{Port}{1234}{SSLport}{1443}{UseSSL}{1}}{Starconquest}{{Host}{moo.squidsoft.net}{Port}{7777}}}

#CLASS {Worlds} CLOSE
