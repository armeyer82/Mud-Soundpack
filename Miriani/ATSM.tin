#CLASS {ATSM} OPEN

#ACTION {^Atmosphere of}
{
	#if {$ATSMFilter==1}
	{
		#line gag
	}
}
{5}

#ACTION {^Cargo Capacity: %1}
{
	#if {$ATSMFilter==1}
	{
		#variable ATSMCargo %1;
		#line gag
	}
}
{5}

#ACTION {^Current Coordinates: %d, %d$}
{
	#variable MyATSMCoords[X] %1;
	#variable MyATSMCoords[Y] %2;
	#if {$ATSMFilter==1}
	{
		#line gag
	}
}
{5}

#ACTION {^Distance to Ship: %*}
{
	#if {$ATSMFilter==1}
	{
		#variable ATSMDistance %1;
		#line gag
	}
}
{5}

#ACTION {^Objects: %*}
{
	#if {$ATSMFilter==1}
	{
		#list ObjectList clear;
		#variable ATSMObjectString %1;
		#replace {ATSMObjectString} {), (} {);(};
		#replace {ATSMObjectString} {, and } {;};
		ProcessATSM;
		#line gag
	};
	#variable ATSMFilter 0
}
{5}

#ACTION {^Power Remaining: %*}
{
	#if {$ATSMFilter==1}
	{
		#variable ATSMPower %1;
		#line gag
	}
}
{5}

#ALIAS {ATSMFindPath}
{
	#if {$ObjectList[+1][X]==$MyATSMCoords[X] && $ObjectList[+1][Y]==$MyATSMCoords[Y]}
	{
		#variable TempX $ObjectList[+2][X];
		#variable TempY $ObjectList[+2][Y]
	};
	#else
	{
		#variable TempX $ObjectList[+1][X];
		#variable TempY $ObjectList[+1][Y]
	};
	#if {$TempX>$MyATSMCoords[X]}
	{
		#math {XDir[Units]} {$TempX-$MyATSMCoords[X]};
		#variable XDir[Dir] E
	};
	#elseif {$TempX<$MyATSMCoords[X]}
	{
		#math {XDir[Units]} {$MyATSMCoords[X]-$TempX};
		#variable XDir[Dir] W
	};
	#else
	{
		#variable XDir 0
	};
	#if {$TempY>$MyATSMCoords[Y]}
	{
		#math {YDir[Units]} {$TempY-$MyATSMCoords[Y]};
		#variable YDir[Dir] S
	};
	#elseif {$TempY<$MyATSMCoords[Y]}
	{
		#math {YDir[Units]} {$MyATSMCoords[Y]-$TempY};
		#variable YDir[Dir] N
	};
	#else
	{
		#variable YDir 0
	};
	#if {$XDir[Units]!=0}
	{
		#variable path $XDir[Units]$XDir[Dir]
	};
	#if {$YDir[Units]!=0}
	{
		#variable path ${path} $YDir[Units]$YDir[Dir]
	};
	ShowATSM
}
{5}

#ALIAS {ComputeATSMDistance}
{
	#format {ObjectX} {%d} {%1};
	#format {ObjectY} {%d} {%2};
	#math {Temp[X]} {$MyATSMCoords[X]-$ObjectX};
	#variable Temp[X] @abs{$Temp[X]};
	#math {Temp[Y]} {$MyATSMCoords[Y]-$ObjectY};
	#variable Temp[Y] @abs{$Temp[Y]};
	#format {ObjectDistance} {%.2f} {($Temp[X]**2+$Temp[Y]**2)//2};
	#format {ObjectDistance} {%d} {$ObjectDistance}
}
{5}

#ALIAS {ProcessATSM}
{
	#variable TempString 0;
	#foreach {$ATSMObjectString} {TempString}
	{
		#regexp {$TempString} {({.*}, {.*})} {#var ObjectX &1;#var ObjectY &2};
		ComputeATSMDistance $ObjectX $ObjectY;
		#variable ObjectList[$ObjectDistance][X] $ObjectX;
		#variable ObjectList[$ObjectDistance][Y] $ObjectY
	};
	ATSMFindPath;
	#unvariable ATSMObjectString
}
{5}

#ALIAS {ShowATSM}
{
	#showme $path, $ATSMPower power, $ATSMDistance away from ship, Cargo: $ATSMCargo;
	#unvariable XDir;
	#unvariable YDir;
	#unvariable TempX;
	#unvariable TempY;
	#unvariable path;
	#unvariable ATMSDistance;
	#unvariable ATSMPower;
	#unvariable ATSMcargo
}
{5}

#ALIAS {atsm}
{
	#variable ATSMFilter 1;
	#send sm
}
{5}

#VARIABLE         {ATSMCargo}  {0/30}
#VARIABLE         {ATSMDistance}  {1 unit}
#VARIABLE         {ATSMFilter}  {0}
#VARIABLE         {MyATSMCoords}  {{X}{9}{Y}{4}}
#VARIABLE         {ObjectDistance}  {3}
#VARIABLE         {ObjectList}  {{3}{{X}{12}{Y}{2}}{4}{{X}{13}{Y}{2}}{6}{{X}{3}{Y}{7}}{7}{{X}{16}{Y}{5}}{9}{{X}{18}{Y}{7}}}

#CLASS {ATSM} CLOSE
